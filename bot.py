from pydoc import describe
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import json



BOT_TOKEN = '7294561923:AAHIn8E5DGoaDTeGJeXjrm3glXpPLoPqPU4'  # —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

async def choose_day(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("Day 1", callback_data='Day 1')],
        [InlineKeyboardButton("Day 2", callback_data='Day 2')],
        [InlineKeyboardButton("Day 3", callback_data='Day 3')],
        [InlineKeyboardButton("Day 4", callback_data='Day 4')],
        [InlineKeyboardButton("Day 5", callback_data='Day 5')],
        [InlineKeyboardButton("Day 6-7", callback_data='Day 6-7')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    day = query.data

    with open('workot_plan.json', 'r', encoding='utf-8') as file:
        plan = json.load(file)

    day_plan = plan.get(day, {})
    if not day_plan:
        await query.edit_message_text(f"–ü–ª–∞–Ω –Ω–∞ {day} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    message = f"–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: {day}\n–ì—Ä—É–ø–ø—ã –º—ã—à—Ü: {', '.join(day_plan['muscle_groups'])}\n\n"
    for ex in day_plan['exercises']:
        message += f"{ex['name']}: {ex['sets']}x{ex['reps']} (–ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–µ—Å: {ex['last_weight'] or '‚Äî'})\n"

    await query.edit_message_text(message)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–±–æ—Ç üí™")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏. –ö–æ–º–∞–Ω–¥—ã : /start , /help ,   üí™")

if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("choose_day", choose_day))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.run_polling()

